import global$1 from './global.js';
import getBuiltIn$1 from './get-built-in.js';
import isCallable$1 from './is-callable.js';
import objectIsPrototypeOf from './object-is-prototype-of.js';
import useSymbolAsUid from './use-symbol-as-uid.js';

var global = global$1;
var getBuiltIn = getBuiltIn$1;
var isCallable = isCallable$1;
var isPrototypeOf = objectIsPrototypeOf;
var USE_SYMBOL_AS_UID = useSymbolAsUid;
var Object$1 = global.Object;
var isSymbol = USE_SYMBOL_AS_UID ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  var $Symbol = getBuiltIn('Symbol');
  return isCallable($Symbol) && isPrototypeOf($Symbol.prototype, Object$1(it));
};

export { isSymbol as default };

import functionCall from './function-call.js';
import anObject$1 from './an-object.js';
import getMethod$1 from './get-method.js';

var call = functionCall;
var anObject = anObject$1;
var getMethod = getMethod$1;

var iteratorClose = function (iterator, kind, value) {
  var innerResult, innerError;
  anObject(iterator);

  try {
    innerResult = getMethod(iterator, 'return');

    if (!innerResult) {
      if (kind === 'throw') throw value;
      return value;
    }

    innerResult = call(innerResult, iterator);
  } catch (error) {
    innerError = true;
    innerResult = error;
  }

  if (kind === 'throw') throw value;
  if (innerError) throw innerResult;
  anObject(innerResult);
  return value;
};

export { iteratorClose as default };

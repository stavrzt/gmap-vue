import global$1 from './global.js';
import fails$1 from './fails.js';
import functionUncurryThis from './function-uncurry-this.js';
import toString$1 from './to-string.js';
import stringTrim from './string-trim.js';
import whitespaces$1 from './whitespaces.js';

var global = global$1;
var fails = fails$1;
var uncurryThis = functionUncurryThis;
var toString = toString$1;
var trim = stringTrim.trim;
var whitespaces = whitespaces$1;
var charAt = uncurryThis(''.charAt);
var n$ParseFloat = global.parseFloat;
var Symbol = global.Symbol;
var ITERATOR = Symbol && Symbol.iterator;
var FORCED = 1 / n$ParseFloat(whitespaces + '-0') !== -Infinity // MS Edge 18- broken with boxed symbols
|| ITERATOR && !fails(function () {
  n$ParseFloat(Object(ITERATOR));
}); // `parseFloat` method
// https://tc39.es/ecma262/#sec-parsefloat-string

var numberParseFloat = FORCED ? function parseFloat(string) {
  var trimmedString = trim(toString(string));
  var result = n$ParseFloat(trimmedString);
  return result === 0 && charAt(trimmedString, 0) == '-' ? -0 : result;
} : n$ParseFloat;

export { numberParseFloat as default };

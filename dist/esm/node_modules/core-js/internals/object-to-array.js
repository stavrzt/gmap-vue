import descriptors from './descriptors.js';
import functionUncurryThis from './function-uncurry-this.js';
import objectKeys$1 from './object-keys.js';
import toIndexedObject$1 from './to-indexed-object.js';
import './object-property-is-enumerable.js';
import { __exports as objectPropertyIsEnumerable } from '../../../_virtual/object-property-is-enumerable.js';

var DESCRIPTORS = descriptors;
var uncurryThis = functionUncurryThis;
var objectKeys = objectKeys$1;
var toIndexedObject = toIndexedObject$1;
var $propertyIsEnumerable = objectPropertyIsEnumerable.f;
var propertyIsEnumerable = uncurryThis($propertyIsEnumerable);
var push = uncurryThis([].push); // `Object.{ entries, values }` methods implementation

var createMethod = function (TO_ENTRIES) {
  return function (it) {
    var O = toIndexedObject(it);
    var keys = objectKeys(O);
    var length = keys.length;
    var i = 0;
    var result = [];
    var key;

    while (length > i) {
      key = keys[i++];

      if (!DESCRIPTORS || propertyIsEnumerable(O, key)) {
        push(result, TO_ENTRIES ? [key, O[key]] : O[key]);
      }
    }

    return result;
  };
};

var objectToArray = {
  // `Object.entries` method
  // https://tc39.es/ecma262/#sec-object.entries
  entries: createMethod(true),
  // `Object.values` method
  // https://tc39.es/ecma262/#sec-object.values
  values: createMethod(false)
};

export { objectToArray as default };

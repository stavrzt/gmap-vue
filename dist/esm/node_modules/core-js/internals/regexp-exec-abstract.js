import global$1 from './global.js';
import functionCall from './function-call.js';
import anObject$1 from './an-object.js';
import isCallable$1 from './is-callable.js';
import classofRaw from './classof-raw.js';
import regexpExec$1 from './regexp-exec.js';

var global = global$1;
var call = functionCall;
var anObject = anObject$1;
var isCallable = isCallable$1;
var classof = classofRaw;
var regexpExec = regexpExec$1;
var TypeError = global.TypeError; // `RegExpExec` abstract operation
// https://tc39.es/ecma262/#sec-regexpexec

var regexpExecAbstract = function (R, S) {
  var exec = R.exec;

  if (isCallable(exec)) {
    var result = call(exec, R, S);
    if (result !== null) anObject(result);
    return result;
  }

  if (classof(R) === 'RegExp') return call(regexpExec, R, S);
  throw TypeError('RegExp#exec called on incompatible receiver');
};

export { regexpExecAbstract as default };

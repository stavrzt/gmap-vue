import global$1 from './global.js';
import functionApply from './function-apply.js';
import isCallable$1 from './is-callable.js';
import engineUserAgent from './engine-user-agent.js';
import arraySlice$1 from './array-slice.js';
import validateArgumentsLength$1 from './validate-arguments-length.js';

var global = global$1;
var apply = functionApply;
var isCallable = isCallable$1;
var userAgent = engineUserAgent;
var arraySlice = arraySlice$1;
var validateArgumentsLength = validateArgumentsLength$1;
var MSIE = /MSIE .\./.test(userAgent); // <- dirty ie9- check

var Function = global.Function;

var wrap = function (scheduler) {
  return MSIE ? function (handler, timeout
  /* , ...arguments */
  ) {
    var boundArgs = validateArgumentsLength(arguments.length, 1) > 2;
    var fn = isCallable(handler) ? handler : Function(handler);
    var args = boundArgs ? arraySlice(arguments, 2) : undefined;
    return scheduler(boundArgs ? function () {
      apply(fn, this, args);
    } : fn, timeout);
  } : scheduler;
}; // ie9- setTimeout & setInterval additional parameters fix
// https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#timers


var schedulersFix = {
  // `setTimeout` method
  // https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#dom-settimeout
  setTimeout: wrap(global.setTimeout),
  // `setInterval` method
  // https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#dom-setinterval
  setInterval: wrap(global.setInterval)
};

export { schedulersFix as default };

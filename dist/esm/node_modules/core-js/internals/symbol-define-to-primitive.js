import functionCall from './function-call.js';
import getBuiltIn$1 from './get-built-in.js';
import wellKnownSymbol$1 from './well-known-symbol.js';
import defineBuiltIn$1 from './define-built-in.js';

var call = functionCall;
var getBuiltIn = getBuiltIn$1;
var wellKnownSymbol = wellKnownSymbol$1;
var defineBuiltIn = defineBuiltIn$1;

var symbolDefineToPrimitive = function () {
  var Symbol = getBuiltIn('Symbol');
  var SymbolPrototype = Symbol && Symbol.prototype;
  var valueOf = SymbolPrototype && SymbolPrototype.valueOf;
  var TO_PRIMITIVE = wellKnownSymbol('toPrimitive');

  if (SymbolPrototype && !SymbolPrototype[TO_PRIMITIVE]) {
    // `Symbol.prototype[@@toPrimitive]` method
    // https://tc39.es/ecma262/#sec-symbol.prototype-@@toprimitive
    // eslint-disable-next-line no-unused-vars -- required for .length
    defineBuiltIn(SymbolPrototype, TO_PRIMITIVE, function (hint) {
      return call(valueOf, this);
    }, {
      arity: 1
    });
  }
};

export { symbolDefineToPrimitive as default };

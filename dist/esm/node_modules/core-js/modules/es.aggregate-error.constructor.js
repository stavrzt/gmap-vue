import _export from '../internals/export.js';
import global$1 from '../internals/global.js';
import objectIsPrototypeOf from '../internals/object-is-prototype-of.js';
import objectGetPrototypeOf from '../internals/object-get-prototype-of.js';
import objectSetPrototypeOf from '../internals/object-set-prototype-of.js';
import copyConstructorProperties$1 from '../internals/copy-constructor-properties.js';
import objectCreate from '../internals/object-create.js';
import createNonEnumerableProperty$1 from '../internals/create-non-enumerable-property.js';
import createPropertyDescriptor$1 from '../internals/create-property-descriptor.js';
import clearErrorStack$1 from '../internals/clear-error-stack.js';
import installErrorCause$1 from '../internals/install-error-cause.js';
import iterate$1 from '../internals/iterate.js';
import normalizeStringArgument$1 from '../internals/normalize-string-argument.js';
import wellKnownSymbol$1 from '../internals/well-known-symbol.js';
import errorStackInstallable from '../internals/error-stack-installable.js';

var $ = _export;
var global = global$1;
var isPrototypeOf = objectIsPrototypeOf;
var getPrototypeOf = objectGetPrototypeOf;
var setPrototypeOf = objectSetPrototypeOf;
var copyConstructorProperties = copyConstructorProperties$1;
var create = objectCreate;
var createNonEnumerableProperty = createNonEnumerableProperty$1;
var createPropertyDescriptor = createPropertyDescriptor$1;
var clearErrorStack = clearErrorStack$1;
var installErrorCause = installErrorCause$1;
var iterate = iterate$1;
var normalizeStringArgument = normalizeStringArgument$1;
var wellKnownSymbol = wellKnownSymbol$1;
var ERROR_STACK_INSTALLABLE = errorStackInstallable;
var TO_STRING_TAG = wellKnownSymbol('toStringTag');
var Error = global.Error;
var push = [].push;

var $AggregateError = function AggregateError(errors, message
/* , options */
) {
  var options = arguments.length > 2 ? arguments[2] : undefined;
  var isInstance = isPrototypeOf(AggregateErrorPrototype, this);
  var that;

  if (setPrototypeOf) {
    that = setPrototypeOf(new Error(), isInstance ? getPrototypeOf(this) : AggregateErrorPrototype);
  } else {
    that = isInstance ? this : create(AggregateErrorPrototype);
    createNonEnumerableProperty(that, TO_STRING_TAG, 'Error');
  }

  if (message !== undefined) createNonEnumerableProperty(that, 'message', normalizeStringArgument(message));
  if (ERROR_STACK_INSTALLABLE) createNonEnumerableProperty(that, 'stack', clearErrorStack(that.stack, 1));
  installErrorCause(that, options);
  var errorsArray = [];
  iterate(errors, push, {
    that: errorsArray
  });
  createNonEnumerableProperty(that, 'errors', errorsArray);
  return that;
};

if (setPrototypeOf) setPrototypeOf($AggregateError, Error);else copyConstructorProperties($AggregateError, Error, {
  name: true
});
var AggregateErrorPrototype = $AggregateError.prototype = create(Error.prototype, {
  constructor: createPropertyDescriptor(1, $AggregateError),
  message: createPropertyDescriptor(1, ''),
  name: createPropertyDescriptor(1, 'AggregateError')
}); // `AggregateError` constructor
// https://tc39.es/ecma262/#sec-aggregate-error-constructor

$({
  global: true,
  constructor: true,
  arity: 2
}, {
  AggregateError: $AggregateError
});

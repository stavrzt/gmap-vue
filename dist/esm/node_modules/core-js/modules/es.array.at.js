import _export from '../internals/export.js';
import toObject$1 from '../internals/to-object.js';
import lengthOfArrayLike$1 from '../internals/length-of-array-like.js';
import toIntegerOrInfinity$1 from '../internals/to-integer-or-infinity.js';
import addToUnscopables$1 from '../internals/add-to-unscopables.js';

var $ = _export;
var toObject = toObject$1;
var lengthOfArrayLike = lengthOfArrayLike$1;
var toIntegerOrInfinity = toIntegerOrInfinity$1;
var addToUnscopables = addToUnscopables$1; // `Array.prototype.at` method
// https://github.com/tc39/proposal-relative-indexing-method

$({
  target: 'Array',
  proto: true
}, {
  at: function at(index) {
    var O = toObject(this);
    var len = lengthOfArrayLike(O);
    var relativeIndex = toIntegerOrInfinity(index);
    var k = relativeIndex >= 0 ? relativeIndex : len + relativeIndex;
    return k < 0 || k >= len ? undefined : O[k];
  }
});
addToUnscopables('at');

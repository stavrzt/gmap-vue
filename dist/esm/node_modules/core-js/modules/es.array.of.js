import _export from '../internals/export.js';
import global$1 from '../internals/global.js';
import fails$1 from '../internals/fails.js';
import isConstructor$1 from '../internals/is-constructor.js';
import createProperty$1 from '../internals/create-property.js';

var $ = _export;
var global = global$1;
var fails = fails$1;
var isConstructor = isConstructor$1;
var createProperty = createProperty$1;
var Array = global.Array;
var ISNT_GENERIC = fails(function () {
  function F() {
    /* empty */
  }

  return !(Array.of.call(F) instanceof F);
}); // `Array.of` method
// https://tc39.es/ecma262/#sec-array.of
// WebKit Array.of isn't generic

$({
  target: 'Array',
  stat: true,
  forced: ISNT_GENERIC
}, {
  of: function
    /* ...args */
  of() {
    var index = 0;
    var argumentsLength = arguments.length;
    var result = new (isConstructor(this) ? this : Array)(argumentsLength);

    while (argumentsLength > index) createProperty(result, index, arguments[index++]);

    result.length = argumentsLength;
    return result;
  }
});

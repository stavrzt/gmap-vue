import _export from '../internals/export.js';
import descriptors from '../internals/descriptors.js';
import ownKeys$1 from '../internals/own-keys.js';
import toIndexedObject$1 from '../internals/to-indexed-object.js';
import '../internals/object-get-own-property-descriptor.js';
import createProperty$1 from '../internals/create-property.js';
import { __exports as objectGetOwnPropertyDescriptor } from '../../../_virtual/object-get-own-property-descriptor.js';

var $ = _export;
var DESCRIPTORS = descriptors;
var ownKeys = ownKeys$1;
var toIndexedObject = toIndexedObject$1;
var getOwnPropertyDescriptorModule = objectGetOwnPropertyDescriptor;
var createProperty = createProperty$1; // `Object.getOwnPropertyDescriptors` method
// https://tc39.es/ecma262/#sec-object.getownpropertydescriptors

$({
  target: 'Object',
  stat: true,
  sham: !DESCRIPTORS
}, {
  getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object) {
    var O = toIndexedObject(object);
    var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
    var keys = ownKeys(O);
    var result = {};
    var index = 0;
    var key, descriptor;

    while (keys.length > index) {
      descriptor = getOwnPropertyDescriptor(O, key = keys[index++]);
      if (descriptor !== undefined) createProperty(result, key, descriptor);
    }

    return result;
  }
});

import _export from '../internals/export.js';
import nativeSymbol from '../internals/native-symbol.js';
import fails$1 from '../internals/fails.js';
import '../internals/object-get-own-property-symbols.js';
import toObject$1 from '../internals/to-object.js';
import { __exports as objectGetOwnPropertySymbols } from '../../../_virtual/object-get-own-property-symbols.js';

var $ = _export;
var NATIVE_SYMBOL = nativeSymbol;
var fails = fails$1;
var getOwnPropertySymbolsModule = objectGetOwnPropertySymbols;
var toObject = toObject$1; // V8 ~ Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives
// https://bugs.chromium.org/p/v8/issues/detail?id=3443

var FORCED = !NATIVE_SYMBOL || fails(function () {
  getOwnPropertySymbolsModule.f(1);
}); // `Object.getOwnPropertySymbols` method
// https://tc39.es/ecma262/#sec-object.getownpropertysymbols

$({
  target: 'Object',
  stat: true,
  forced: FORCED
}, {
  getOwnPropertySymbols: function getOwnPropertySymbols(it) {
    var $getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
    return $getOwnPropertySymbols ? $getOwnPropertySymbols(toObject(it)) : [];
  }
});

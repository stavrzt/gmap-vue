import _export from '../internals/export.js';
import functionUncurryThis from '../internals/function-uncurry-this.js';
import toIndexedObject$1 from '../internals/to-indexed-object.js';
import toObject$1 from '../internals/to-object.js';
import toString$1 from '../internals/to-string.js';
import lengthOfArrayLike$1 from '../internals/length-of-array-like.js';

var $ = _export;
var uncurryThis = functionUncurryThis;
var toIndexedObject = toIndexedObject$1;
var toObject = toObject$1;
var toString = toString$1;
var lengthOfArrayLike = lengthOfArrayLike$1;
var push = uncurryThis([].push);
var join = uncurryThis([].join); // `String.raw` method
// https://tc39.es/ecma262/#sec-string.raw

$({
  target: 'String',
  stat: true
}, {
  raw: function raw(template) {
    var rawTemplate = toIndexedObject(toObject(template).raw);
    var literalSegments = lengthOfArrayLike(rawTemplate);
    var argumentsLength = arguments.length;
    var elements = [];
    var i = 0;

    while (literalSegments > i) {
      push(elements, toString(rawTemplate[i++]));
      if (i === literalSegments) return join(elements, '');
      if (i < argumentsLength) push(elements, toString(arguments[i]));
    }
  }
});

import _export from '../internals/export.js';
import hasOwnProperty_1 from '../internals/has-own-property.js';
import isSymbol$1 from '../internals/is-symbol.js';
import tryToString$1 from '../internals/try-to-string.js';
import '../internals/shared.js';
import nativeSymbolRegistry from '../internals/native-symbol-registry.js';
import { s as shared$1 } from '../../../_virtual/shared.js';

var $ = _export;
var hasOwn = hasOwnProperty_1;
var isSymbol = isSymbol$1;
var tryToString = tryToString$1;
var shared = shared$1.exports;
var NATIVE_SYMBOL_REGISTRY = nativeSymbolRegistry;
var SymbolToStringRegistry = shared('symbol-to-string-registry'); // `Symbol.keyFor` method
// https://tc39.es/ecma262/#sec-symbol.keyfor

$({
  target: 'Symbol',
  stat: true,
  forced: !NATIVE_SYMBOL_REGISTRY
}, {
  keyFor: function keyFor(sym) {
    if (!isSymbol(sym)) throw TypeError(tryToString(sym) + ' is not a symbol');
    if (hasOwn(SymbolToStringRegistry, sym)) return SymbolToStringRegistry[sym];
  }
});

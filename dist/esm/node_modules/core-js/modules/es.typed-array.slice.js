import arrayBufferViewCore from '../internals/array-buffer-view-core.js';
import typedArraySpeciesConstructor$1 from '../internals/typed-array-species-constructor.js';
import fails$1 from '../internals/fails.js';
import arraySlice$1 from '../internals/array-slice.js';

var ArrayBufferViewCore = arrayBufferViewCore;
var typedArraySpeciesConstructor = typedArraySpeciesConstructor$1;
var fails = fails$1;
var arraySlice = arraySlice$1;
var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;
var FORCED = fails(function () {
  // eslint-disable-next-line es-x/no-typed-arrays -- required for testing
  new Int8Array(1).slice();
}); // `%TypedArray%.prototype.slice` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.slice

exportTypedArrayMethod('slice', function slice(start, end) {
  var list = arraySlice(aTypedArray(this), start, end);
  var C = typedArraySpeciesConstructor(this);
  var index = 0;
  var length = list.length;
  var result = new C(length);

  while (length > index) result[index] = list[index++];

  return result;
}, FORCED);

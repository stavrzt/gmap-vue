import arrayBufferViewCore from '../internals/array-buffer-view-core.js';
import toLength$1 from '../internals/to-length.js';
import toAbsoluteIndex$1 from '../internals/to-absolute-index.js';
import typedArraySpeciesConstructor$1 from '../internals/typed-array-species-constructor.js';

var ArrayBufferViewCore = arrayBufferViewCore;
var toLength = toLength$1;
var toAbsoluteIndex = toAbsoluteIndex$1;
var typedArraySpeciesConstructor = typedArraySpeciesConstructor$1;
var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod; // `%TypedArray%.prototype.subarray` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.subarray

exportTypedArrayMethod('subarray', function subarray(begin, end) {
  var O = aTypedArray(this);
  var length = O.length;
  var beginIndex = toAbsoluteIndex(begin, length);
  var C = typedArraySpeciesConstructor(O);
  return new C(O.buffer, O.byteOffset + beginIndex * O.BYTES_PER_ELEMENT, toLength((end === undefined ? length : toAbsoluteIndex(end, length)) - beginIndex));
});
